<% @reviews.each do |review| %>
  <div class="user-post-info">
    <% if review.user && review.user.profile_image.attached? %>
      <%= link_to review.user, class: "user-post-info__icon" do %>
        <%= image_tag review.user.profile_image %>
      <% end %>
    <% end %>
    <div class="user-post-details">
      <div class="user-post-details__user-name">
        <span><%= review.user ? review.user.name : "Unknown User" %></span>
        <% if review.persisted? %>
          <%= image_tag "more.png", size: "20x20", class: "post-action-icon", data: { review_path: review_path(review) } %>
        <% end %>
      </div>
      <div class="user-post-details__created-time">
        <% if review.created_at %>
          <%= formatted_post_time(review.created_at) %>
        <% else %>
          <span>日時不明</span>
        <% end %>
      </div>
      <div class="user-post-heritage-block">
        <%= link_to review.heritage.name, heritage_path(review.heritage), class: "user-post-heritage-block__heritage-name" %>
        <span class="user-post-heritage-block__country-name">
          [<%= review.heritage.country.name %>]
        </span>
      </div>        
      <% if !review.score.nil? %>
        <div class="review-score-container">
          <%= render 'shared/review_score', review: review %>
        </div>
      <% end %>
      <% if review.persisted? %>
        <!--<%= link_to review_path(review), class: 'post-content' do %>-->
          <div class="post-content">
            <p><%= simple_format(review.content) %></p>
          </div>
        <!--<% end %>-->
      <% else %>
        <p><%= simple_format(review.content) %></p>
      <% end %>
      <div class="show-more-btn">もっと見る</div>
      <% if review.review_images.attached? %>
        <% review.review_images.each do |image| %>
          <div class="user-post-details__post-img">
            <%= image_tag image.variant(resize_to_limit: [300, 300]) %>
          </div>
        <% end %>
      <% end %>
      <span class="user-post-details__like" id="like-<%= review.id %>">
        <%= render 'shared/like', review: review %>
      </span>
      <span class="user-post-details__reply">
        <%= render 'shared/reply', review: review %>
      </span>
    </div>
  </div>
   <hr class="user-post-info__hr">
<% end %>
<%= render 'popup/post_action_popup' %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // 「もっと見る」ボタンをクリックした時の処理
    // var reviewIdInput = document.getElementById('review-id-input');
    // var reviewId = reviewIdInput.value;
    // console.log(reviewIdInput.value);
    // console.log(showMoreBtn);
    // var showMoreBtn = document.getElementById(`show-more-btn-${reviewId}`);
    // var postContent = document.getElementById(`post-content-${reviewId}`);
    // showMoreBtn.addEventListener('click', function() {
    //   postContent.classList.toggle('active');
    //   if (postContent.classList.contains('active')) {
    //     showMoreBtn.textContent = '閉じる';
    //   } else {
    //     showMoreBtn.textContent = 'もっと見る';
    //   }
    // });
    var showMoreBtns = document.querySelectorAll('.show-more-btn');
    showMoreBtns.forEach(function(showMoreBtn) {
      showMoreBtn.addEventListener('click', function() {
        var prev = showMoreBtn.previousElementSibling;
        if(prev.classList.contains('active') === true) {
          prev.classList.remove('active');
          showMoreBtn.textContent = 'もっと見る';
        }else{
          prev.classList.add('active');
          showMoreBtn.textContent = '閉じる'; 
        }
      });
    });

    // 投稿のheightがmax-heightに達したら「もっと見る」ボタンを非表示にする
    var postContents = document.querySelectorAll('.post-content');
    postContents.forEach(function(postContent) {
      if (postContent.scrollHeight < 150) {
        postContent.classList.add('active');
        var btn = postContent.nextElementSibling;
        btn.classList.add("display-none");
      }
    });

    // イイねボタン押した時の処理
    var likeIcons = document.querySelectorAll('.js-like-icon');
    var heartRedIcons = document.querySelectorAll('.js-heart-red-icon');
    likeIcons.forEach(function(likeIcon) {
      likeIcon.addEventListener('click', function() {
        var currentReviewId = this.getAttribute('data-review-id');
        var csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
        fetch("/likes", {
          method: "POST",
          headers: {
            "X-CSRF-Token": csrfToken,
            "Content-Type": "application/json"
          },
          body: JSON.stringify({ review_id: currentReviewId })
        });
      });
    });

    heartRedIcons.forEach(function(heartRedIcon) {
      heartRedIcon.addEventListener('click', function() {
        var currentReviewId = this.getAttribute('data-review-id');
        var currentReviewURL = `/likes/${currentReviewId}`;
        var csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
        fetch(currentReviewURL, {
          method: "DELETE",
          headers: {
            "X-CSRF-Token": csrfToken,
            "Content-Type": "application/json"
          },
          body: JSON.stringify({ review_id: currentReviewId })
        })
      });
    });

    var closeBtn = document.getElementById('close-btn');
    var postActionPopup = document.getElementById('post-action-popup');
    var postActionIcons = document.querySelectorAll('.post-action-icon');
    var deleteBtn = document.getElementById('delete-btn');
    var grayOut = document.getElementById('gray-out');
    // 投稿の「・・・」ボタン押下時の処理
    postActionIcons.forEach(function(postActionIcon) {
      postActionIcon.addEventListener('click', function() {
        postActionPopup.classList.remove('display-none');
        grayOut.classList.remove('display-none');
        // クリックされたpost-action-iconに対応するレビューのURLを取得
        currentReviewUrl = this.getAttribute('data-review-path');
      });
    });
    // ポップアップの閉じるボタン押下時の処理
    closeBtn.addEventListener('click', function() {
      postActionPopup.classList.add('display-none');
      grayOut.classList.add('display-none');
    });
    // 削除ボタン押下時の処理
    deleteBtn.addEventListener('click', function() {
      var confirmation = confirm('本当に削除しますか？');
      if (confirmation) {
        var csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
        fetch(currentReviewUrl, {
          method: "DELETE",
          headers: {
            "X-CSRF-Token": csrfToken,
            "Content-Type": "application/json"
          }
        })
        .then(response => {
          if (response.ok) {
            window.location.reload();
          } else {
            alert('削除に失敗しました');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          alert('削除に失敗しました');
        });
      } else {
        postActionPopup.classList.add('display-none');
        grayOut.classList.add('display-none');
      }
    });
  });
</script>
